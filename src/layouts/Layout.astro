---
import Footer from '../components/Footer.astro';
import { SITE_NAME } from '../consts';

interface Props {
	title: string;
}

const { title } = Astro.props;
const navLinks = { 
	"/":"Home",
	"/about":"About"
}
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href='data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Layer_1" x="0px" y="0px" viewBox="0 0 100 100" enable-background="new 0 0 100 100" xml:space="preserve" height="100px" width="100px"><text y=".9em" font-size="90">0️⃣</text></svg>' />
		<meta name="generator" content={Astro.generator} />
		<title>{title || SITE_NAME}</title>
	</head>
	<body>
		<nav class="border-b-1 border-b-gray-200">
			<div class="flex items-center justify-between border-x-1 border-gray-200 pl-5 wrapper mx-auto">
				<h1 class="font-mono text-xl">NOTSHORT</h1>
				<div class="flex items-center">
					<ul class={`grid grid-auto-flow-col`}>
						{Object.entries(navLinks).map(([href, title]) => {
							return <li class="grid-col-[span_1] block">
								<a href={href} class="text-sm px-5 py-8 tracking-0.1 block">{title}</a>
							</li>
						})}
					</ul>
					<div id="auth-links" class="pl-2">
						<a href="/login" id="login-link" class="text-sm px-4 py-8 tracking-0.1 hidden">Login</a>
						<a href="/signup" id="signup-link" class="text-sm px-4 py-8 tracking-0.1 hidden">Sign Up</a>
						<a href="/dashboard" id="dashboard-link" class="text-sm px-4 py-8 tracking-0.1 hidden">Dashboard</a>
						<button id="logout-btn" class="text-sm px-4 py-8 tracking-0.1 hidden">Logout</button>
					</div>
				</div>
			</div>
		</nav>
		<slot />
		<Footer />
		
		<script>
			import { supabase } from '../lib/supabaseClient';
			
			// Elements
			const loginLink = document.getElementById('login-link');
			const signupLink = document.getElementById('signup-link');
			const dashboardLink = document.getElementById('dashboard-link');
			const logoutBtn = document.getElementById('logout-btn');
			
			// Check auth status and update UI
			async function updateAuthUI() {
				const { data } = await supabase.auth.getSession();
				const isLoggedIn = !!data.session;
				
				if (isLoggedIn) {
					// User is logged in
					loginLink?.classList.add('hidden');
					signupLink?.classList.add('hidden');
					dashboardLink?.classList.remove('hidden');
					logoutBtn?.classList.remove('hidden');
				} else {
					// User is not logged in
					loginLink?.classList.remove('hidden');
					signupLink?.classList.remove('hidden');
					dashboardLink?.classList.add('hidden');
					logoutBtn?.classList.add('hidden');
				}
			}
			
			// Handle logout
			logoutBtn?.addEventListener('click', async () => {
				await supabase.auth.signOut();
				window.location.href = '/';
			});
			
			// Initial auth UI update
			updateAuthUI();
		</script>
	</body>
</html>
<style is:global>
	html,
	body {
		height: 100%;
		min-height: 100vh;
	}
	body {
		display: flex;
		flex-flow: column;
	}
	body > main {
		flex: 1;
	}
	.content-wrapper {
        :is(h2,h3,h4,h5,h6) {
            font-weight: 600;
            margin-top: 1ex;
        }
        p {
            margin-top: 1ex;
        }
        h2 {
            font-size: 1.875rem;
        }
        h3 {
            font-size: 1.5rem;
        }
        h4 {
            font-size: 1.35rem;
        }
        h5, h6 {
            font-weight: 500;
            font-size: 1.1rem;
        }
		ul {
			list-style-type:square;
			list-style-position: inside;
			margin-top: 1ex;
		}
		pre {
			margin-top: 1ex;
			padding-block: 1.5rem;
		}
    }
</style>