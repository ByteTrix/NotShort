---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Section from '../components/Section.astro';
import SectionSpacer from '../components/SectionSpacer.astro';
import InvestorGrid from '../components/InvestorGrid.astro';
import LongifyForm from '../components/LongifyForm.astro';
import RecentLinks from '../components/RecentLinks.astro';
import { getRepoStats, getRepoUrl } from '../lib/github'; // Import getRepoUrl
import { createSupabaseServerClient } from '../lib/supabaseClient';
import CountUp from "../components/CountUp.astro"; // For animated numbers

const supabase = createSupabaseServerClient(Astro.cookies);

let generatedUrlsCount: number | string = 'N/A';
let activeUsersCount: number | string = 'N/A';
// let githubStarsCount: number | string = 'N/A'; // Will get this from repoStats
import type { RepoStats } from '../lib/github'; // Import the interface
let repoStats: RepoStats | null = null; // Store the full stats object

// Simple in-memory cache for user count
const USER_COUNT_CACHE_DURATION_MS = 60 * 60 * 1000; // 60 minutes
let userCountCache = {
  count: null as number | null,
  timestamp: 0,
};

try {
  const { count: urlsCount, error: urlsError } = await supabase
    .from('links') // Assuming 'links' table stores generated URLs
    .select('*', { count: 'exact', head: true });

  if (urlsError) {
    console.error('Error fetching generated URLs count:', urlsError.message);
  } else {
    generatedUrlsCount = urlsCount ?? 0;
  }
} catch (e: any) {
  console.error('Supabase query error (URLs):', e.message);
}

try {
  const now = Date.now();
  if (userCountCache.timestamp > 0 && (now - userCountCache.timestamp < USER_COUNT_CACHE_DURATION_MS) && userCountCache.count !== null) {
    console.log('Using cached user count:', userCountCache.count);
    activeUsersCount = userCountCache.count;
  } else {
    console.log('Fetching fresh user count via get-user-count Edge Function...');
    // Ensure get-user-count function is deployed and working
    const { data: userCountData, error: userCountError } = await supabase.functions.invoke('get-user-count');
    console.log('Raw response from get-user-count:', { userCountData, userCountError });

    if (userCountError) {
      console.error('Error invoking get-user-count function:', userCountError.message, userCountError);
      activeUsersCount = userCountCache.count !== null ? userCountCache.count : 'Error'; // Fallback to stale cache or Error
      if (userCountCache.count !== null) console.warn('Falling back to stale user count due to fetch error.');
    } else if (userCountData && (typeof userCountData.count === 'number' || userCountData.count === null)) {
      const newCount = userCountData.count === null ? 0 : userCountData.count; // Treat null as 0
      activeUsersCount = newCount;
      userCountCache = { count: newCount, timestamp: now }; // Update cache
      console.log('User count updated in cache:', newCount);
    } else {
      console.error('Invalid data structure received from get-user-count function:', userCountData);
      activeUsersCount = userCountCache.count !== null ? userCountCache.count : 'N/A'; // Fallback to stale cache or N/A
    }
  }
} catch (e: any) {
  console.error('Exception while calling get-user-count Edge Function:', e.message);
  activeUsersCount = userCountCache.count !== null ? userCountCache.count : 'Error'; // Fallback to stale cache or Error
  if (userCountCache.count !== null) console.warn('Falling back to stale user count due to exception.');
}

try {
  repoStats = await getRepoStats(); // Fetches stars, forks, contributors, etc.
} catch (e: any) {
  console.error('Error fetching GitHub stats:', e.message);
  // Fallback or ensure repoStats remains null so the page can handle it
  repoStats = { // Provide a fallback structure matching RepoStats
    stars: 0,
    forks: 0,
    contributors: [],
    lastUpdate: new Date().toISOString()
  };
}

const newStats = [
  { title: "URLs Generated", value: generatedUrlsCount, unit: "", by: "" },
  { title: "Active Users", value: activeUsersCount, unit: "", by: "" },
  { title: "GitHub Stars", value: repoStats?.stars ?? 'N/A', unit: "✨", by: "" },
];

const contributorsPageUrl = `${getRepoUrl()}/graphs/contributors`;
---

<Layout title="NotShort – A Parody Link Longner">
  <Header gridBg>
    <div class="text-center py-12 md:py-35"> {/* Added padding for better spacing */}
      <p class="font-mono text-sm text-gray-600 dark:text-gray-400 mb-2"> {/* Adjusted tagline styling */}
        The best site that makes your links longer, not shorter!
      </p>
      <h1 class="text-6xl md:text-7xl font-serif font-bold mb-6 text-gray-900 dark:text-white"> {/* Larger, serif font for title */}
        NotShort
      </h1>
      <p class="text-lg text-gray-700 dark:text-gray-300 max-w-xl mx-auto mb-8"> {/* Slightly larger subtitle */}
        Welcome to the world's most well developed url <span class="line-through">shortener</span> <span class="text-accent font-medium">lengthener</span>. We take your short links and make them as long and ridiculous as possible. Why be short when you can be not short ? (Get it ? "NotShort")
      </p>
      <div class="mt-10 max-w-lg mx-auto"> {/* Added max-width to form container */}
        <LongifyForm />
      </div>
    </div>
  </Header>
  
  <main>
    <!-- Recent Links Section (Real data) -->
    <RecentLinks />
    
    <SectionSpacer size="md" />
    
    <!-- Stats Grid with real statistics -->
    <Section fullWidthBorder={false}>
      <div class="text-center py-8"> {/* Added padding */}
        <h2 class="title mb-4">Our Global Impact on URL Verbosity</h2> {/* More "corporate" heading */}
        <p class="subtitle-small max-w-2xl mx-auto">
          Witness the staggering growth of unnecessarily elongated links across the digital expanse. We're revolutionizing inefficiency, one character at a time.
        </p> {/* Humorous sub-description */}
      </div>
    </Section>
    <!-- New Stats Display -->
    <Section class="py-0" padBlock={false}>
      <ul class="inherit-content-container grid lg:grid-cols-[repeat(3,1fr)] grid-auto-rows-[200px] place-center">
        {newStats.map(({ title, value, unit }) => (
          <li class="flex flex-col justify-center text-center border-r-1 border-r-gray-200 dark:border-r-gray-700 last:border-r-0 px-4">
            {typeof value === 'number' ? (
              <CountUp class="text-8 md:text-10 font-mono" start={0} end={value} unit={unit} />
            ) : (
              <span class="text-8 md:text-10 font-mono">{value}{unit}</span>
            )}
            <p class="text-md mt-2">{title}</p>
          </li>
        ))}
      </ul>
    </Section>
    
    <SectionSpacer size="md" />
    
    <!-- GitHub Contributors Section -->
    <Section index source="contributors.md" fullWidthBorder variant="dark">
      <div class="lg:w-[70%] md:w-[80%] mx-auto">
        <h2 class="title mb-8">Our Confused Contributors</h2>
        <p class="subtitle-small mb-8">These brave souls write code that makes URLs longer instead of shorter. They still don't understand the assignment.</p>
        
        {repoStats && repoStats.contributors && repoStats.contributors.length > 0 ? (
          <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-x-8 gap-y-10 mb-16"> {/* Adjusted grid and gaps */}
            {repoStats.contributors.map((contributor, itemIndex) => {
              const isFounder = contributor.name.toLowerCase() === 'kavinthangavel';
              return (
              <a
                href={contributor.url}
                target="_blank"
                rel="noopener noreferrer"
                class="contributor-card group relative flex flex-col items-center text-center p-6 max-w-xs mx-auto bg-gray-800/70 dark:bg-gray-900/60 border border-gray-700/70 dark:border-gray-700 rounded-2xl shadow-2xl overflow-visible transition-all duration-300 ease-out hover:shadow-purple-500/30 dark:hover:shadow-purple-400/25 hover:border-purple-500/90 dark:hover:border-purple-400/90 hover:scale-105"
                style={`--animation-delay: ${itemIndex * 120}ms;`}
              >
                <div class="absolute -top-2 -right-2 w-full h-full bg-gradient-to-br from-purple-600/10 via-transparent to-indigo-600/10 opacity-0 group-hover:opacity-50 transition-opacity duration-500 ease-out z-0 rounded-2xl blur-sm group-hover:blur-none"></div>
                
                <div class="relative mb-5"> {/* Container for DP and Founder Cloud, reduced mb */}
                  <img
                    src={contributor.avatar}
                    alt={`Avatar of ${contributor.name}`}
                    class="floating-dp relative z-10 w-24 h-24 rounded-full border-4 border-gray-600 dark:border-gray-500/90 group-hover:border-purple-400 dark:group-hover:border-purple-300 transition-all duration-300 ease-out group-hover:scale-110 shadow-lg group-hover:shadow-purple-500/50"
                    loading="lazy"
                  />
                  {isFounder && (
                    <div class="founder-cloud absolute -top-3 -right-5 z-20 px-3 py-1 bg-gradient-to-r from-purple-600 to-indigo-600 text-white text-xs font-bold rounded-md shadow-lg transform rotate-6 group-hover:rotate-0 group-hover:scale-110 transition-transform duration-300 ease-out"> {/* Adjusted position & py */}
                      Founder
                    </div>
                  )}
                </div>

                <div class="relative z-10">
                  <h3 class="font-mono text-lg font-bold text-gray-100 dark:text-white group-hover:text-purple-300 dark:group-hover:text-purple-200 transition-colors duration-300 mb-1">{contributor.name}</h3> {/* Reduced text size slightly */}
                  {!isFounder && (
                    <p class="text-sm font-medium text-indigo-400 dark:text-indigo-300 group-hover:text-indigo-200 dark:group-hover:text-indigo-100 transition-colors duration-300">
                      Contributor
                    </p>
                  )}
                </div>
              </a>
            );
          })}
          </div>
        ) : (
          <p class="text-center text-gray-500 dark:text-gray-400 py-8">Could not load contributors, or maybe they are all too confused to show up!</p>
        )}
        
        <div class="text-center mt-8">
          <a href={contributorsPageUrl} target="_blank" rel="noopener noreferrer" class="longify-btn">
            <span class="relative z-10">View All Contributors</span>
          </a>
        </div>
      </div>
    </Section>
    
    <SectionSpacer size="md" />
    
    <!-- Investors Section -->
    <Section index source="investors.md" fullWidthBorder>
      <div class="pb-12.5">
        <h2 class="title">Our Confused Supporters</h2>
        <p class="subtitle-small md:w-[50%]">These brave souls support our mission to make the internet less efficient. They couldn't figure out how to withdraw their funding.</p>
      </div>
      <InvestorGrid />
    </Section>
    
    <SectionSpacer />
    
    <!-- Repository Section -->
    <Section index source="Component.framework" fullWidthBorder variantInside="dark">
      <div class="grid lg:grid-cols-[4fr_1fr] place-items-center gap-5">
        <h2 class="text-pretty title text-8 leading-8 font-bold c-gray-800 dark:c-gray-100">Want to contribute to the URL longification revolution?<br/><span class="c-gray-500 dark:c-gray-300 text-[0.9em]">Check out our unnecessarily complicated GitHub repository.</span></h2>
        <div>
          <a href="#" class="longify-btn"> {/* Placeholder href */}
            <span class="relative z-10">Visit Repo</span> {/* Wrap text in span */}
          </a>
        </div>
      </div>
    </Section>
    
    <SectionSpacer />
    
    <!-- Why Choose NotShort Section -->
    <Section variant="dark" index source="statement.md" fullWidthBorder>
      <div class="text-center py-12 md:py-16"> {/* Added padding and text-center */}
        <h2 class="title mb-4">Why Choose NotShort?</h2>
        <p class="subtitle-small max-w-2xl mx-auto mb-8">
          Tired of short, boring links? So are we! NotShort is the revolutionary service you never knew you needed, dedicated to making your web addresses impressively long and confusing.
        </p>
        <ul class="text-left max-w-md mx-auto space-y-3 text-gray-300"> {/* Centered list, adjusted spacing */}
          <li><strong class="font-semibold text-white">More Characters, More Fun:</strong> We add tons of extra letters, numbers, and dashes. Because why not?</li>
          <li><strong class="font-semibold text-white">Guaranteed Slowdown:</strong> Sharing links takes longer. Perfect for avoiding actual work.</li>
          <li><strong class="font-semibold text-white">Confuse Your Friends:</strong> Send links that look important (but probably aren't).</li>
          <li><strong class="font-semibold text-white">Totally Pointless:</strong> It's the core feature! Embrace the absurdity.</li>
        </ul>
      </div>
    </Section>
  </main>
</Layout>

<style>
  .longify-btn {
    display: inline-block;
    position: relative;
    padding: 0.75rem 1.5rem; /* 12px 24px */
    font-weight: bold; /* fw-bold */
    color: #E5E7EB; /* c-gray-100 / text-gray-200 approx */
    background-color: #1F2937; /* bg-gray-800 */
    text-align: center;
    border-radius: 0.375rem; /* rounded-md */
    overflow: hidden;
    transition: color 0.3s ease, transform 0.2s ease;
    transform-origin: center;
  }

  .longify-btn::before { /* Replaces btn-bg span */
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, #3B82F6 0%, #8B5CF6 100%);
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 0.4s cubic-bezier(0.23, 1, 0.32, 1); /* Smoother transition */
    z-index: 0;
  }

  .longify-btn:hover {
    color: white; /* Ensure text is visible on gradient */
    transform: scale(1.03); /* Subtle scale on hover */
  }

  .longify-btn:hover::before {
    transform: scaleX(1);
  }
  
  .longify-btn span { /* If you keep the span structure */
    position: relative;
    z-index: 1;
  }

  /* If you remove the inner spans and just put text in <a> */
  /* .longify-btn { z-index: 1; } ensure text is above ::before */

  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  .contributor-card {
    opacity: 0;
    transform: translateY(30px) scale(0.9);
    animation: cardFadeIn 0.7s cubic-bezier(0.165, 0.84, 0.44, 1) forwards; /* Smoother ease-out */
    animation-delay: var(--animation-delay, 0ms);
  }

  @keyframes cardFadeIn {
    to {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }

  .floating-dp {
    animation: floatAnimation 4s ease-in-out infinite;
  }

  @keyframes floatAnimation {
    0%, 100% {
      transform: translateY(0) rotate(-1deg); /* Slight initial tilt */
    }
    50% {
      transform: translateY(-8px) rotate(1deg); /* Bob up and tilt other way */
    }
  }

  .founder-cloud {
    /* Basic cloud/tag styling, can be enhanced further */
    /* For a speech bubble tail, more complex CSS (pseudo-elements) would be needed */
  }
</style>
